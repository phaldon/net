(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{365:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"net-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net-network"}},[t._v("#")]),t._v(" net::network")]),t._v(" "),a("p",[t._v("网络是一些点和点间关联的并  "),a("a",{attrs:{href:"#detailed-description"}},[t._v("More...")])]),t._v(" "),a("p",[a("code",[t._v("#include <network.hpp>")])]),t._v(" "),a("h2",{attrs:{id:"public-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-types"}},[t._v("#")]),t._v(" Public Types")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("using typename std::map< NodeKey, "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >, typename Trait::nodekey_less >::iterator")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")])],1)])])])]),t._v(" "),a("h2",{attrs:{id:"public-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-functions"}},[t._v("#")]),t._v(" Public Functions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-network"}},[t._v("network")])],1),t._v("() =default")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-network"}},[t._v("network")])],1),t._v("(const std::string & s)")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-network"}},[t._v("network")])],1),t._v("(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > & N)")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-operator="}},[t._v("operator=")])],1),t._v("(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > & N)")],1)]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-network"}},[t._v("network")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > && ) =default")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-operator="}},[t._v("operator=")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > && ) =default")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-fope"}},[t._v("fope")])],1),t._v("(std::function< NodeVal(const NodeVal &)> f1, std::function< EdgeVal(const EdgeVal &)> f2) "),a("br"),t._v("对每个格点上的信息做变换")])]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")])],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-add"}},[t._v("add")])],1),t._v("(const NodeKey & nodekey) "),a("br"),t._v("加一个格点")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-set_edge"}},[t._v("set_edge")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2, const EdgeKey & ind1, const EdgeKey & ind2) "),a("br"),t._v("加一条边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-set_edge"}},[t._v("set_edge")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , const EdgeKey & , const EdgeKey & )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-set_edge"}},[t._v("set_edge")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2) "),a("br"),t._v("加一条边。根据格点名字和Trait::bind自动生成边的名字")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-set_edge"}},[t._v("set_edge")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del"}},[t._v("del")])],1),t._v("(const NodeKey & nodekey) "),a("br"),t._v("删除一个格点")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del"}},[t._v("del")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del_edge"}},[t._v("del_edge")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2) "),a("br"),t._v("删除两个格点之间的边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del_edge"}},[t._v("del_edge")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del_leg"}},[t._v("del_leg")])],1),t._v("(const NodeKey & nodekey, const EdgeKey & ind) "),a("br"),t._v("删除一个腿连着的边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-del_leg"}},[t._v("del_leg")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , const EdgeKey & )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-rename"}},[t._v("rename")])],1),t._v("(const NodeKey & old_key, const NodeKey & new_key) "),a("br"),t._v("重命名一个格点")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-rename"}},[t._v("rename")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" & , const NodeKey & )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-absorb"}},[t._v("absorb")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > absorb_fun, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > contract_fun) "),a("br"),t._v("将另一个格点缩入一个格点")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-absorb"}},[t._v("absorb")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > , "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > )")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-split"}},[t._v("split")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2, const NodeKey & nodekey3, const std::set< EdgeKey, typename Trait::edgekey_less > & inds, const EdgeKey & ind2, const EdgeKey & ind3, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-dec_type"}},[t._v("dec_type")]),t._v("< NodeVal, EdgeVal, EdgeKey, typename Trait::edgekey_less > dec_fun) "),a("br"),t._v("将另一个格点分解为两个格点")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-split"}},[t._v("split")])],1),t._v("(const NodeKey & nodekey1, const NodeKey & nodekey2, const std::set< EdgeKey, typename Trait::edgekey_less > & inds, const EdgeKey & ind1, const EdgeKey & ind2, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-dec_type"}},[t._v("dec_type")]),t._v("< NodeVal, EdgeVal, EdgeKey, typename Trait::edgekey_less > dec_fun) "),a("br"),t._v("将另一个格点分解为两个格点")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::string")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-gviz"}},[t._v("gviz")])],1),t._v("(const std::set< NodeKey, typename Trait::nodekey_less > & contains, const bool label_bond) "),a("br"),t._v("将网络转化为graphviz格式的字符串")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-exist"}},[t._v("exist")])],1),t._v("(const NodeKey & nodekey) "),a("br"),t._v("判断网络是否包含一个格点")])]),t._v(" "),a("tr",[a("td",[t._v("NodeVal &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-operator[]"}},[t._v("operator[]")])],1),t._v("(const NodeKey & nodekey) "),a("br"),t._v("返回网络的一个格点的信息")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-set_val"}},[t._v("set_val")])],1),t._v("(const NodeKey & nodekey, const NodeVal & value) "),a("br"),t._v("设置网络的一个格点的信息")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-init_nodes"}},[t._v("init_nodes")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-init_node_type"}},[t._v("init_node_type")]),t._v("< NodeVal, EdgeKey > init_fun) "),a("br"),t._v("初始化网络的格点的信息")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-init_edges"}},[t._v("init_edges")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-init_edge_type"}},[t._v("init_edge_type")]),t._v("< EdgeVal, EdgeKey > init_fun) "),a("br"),t._v("初始化网络的边的信息")],1)]),t._v(" "),a("tr",[a("td",[t._v("NodeVal")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-contract"}},[t._v("contract")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > absorb_fun, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > contract_fun) "),a("br"),t._v("缩并整个网络")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-tn_contract1"}},[t._v("tn_contract1")])],1),t._v("(const NodeKey & nodekey, const std::set< NodeKey, typename Trait::nodekey_less > & group, NodeVal & ten, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > absorb_fun, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > contract_fun) "),a("br"),t._v("缩并的辅助函数")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-tn_contract1"}},[t._v("tn_contract1")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#using-iternode"}},[t._v("IterNode")]),t._v(" , const std::set< NodeKey, typename Trait::nodekey_less > & , NodeVal & , "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > , "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > )")],1)]),t._v(" "),a("tr",[a("td",[t._v("NodeVal")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#function-tn_contract2"}},[t._v("tn_contract2")])],1),t._v("(const std::set< NodeKey, typename Trait::nodekey_less > & group1, NodeVal & ten1, const std::set< NodeKey, typename Trait::nodekey_less > & group2, NodeVal & ten2, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-absorb_type"}},[t._v("absorb_type")]),t._v("< NodeVal, EdgeVal, EdgeKey > absorb_fun, "),a("RouterLink",{attrs:{to:"/Namespaces/namespacenet.html#using-contract_type"}},[t._v("contract_type")]),t._v("< NodeVal, EdgeKey, typename Trait::edge2key_less > contract_fun) "),a("br"),t._v("缩并的辅助函数")],1)])])]),t._v(" "),a("h2",{attrs:{id:"friends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friends"}},[t._v("#")]),t._v(" Friends")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("std::ostream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#friend-operator<<"}},[t._v("operator<<")])],1),t._v("(std::ostream & , const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("网络的字符串输出")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::istream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#friend-operator>>"}},[t._v("operator>>")])],1),t._v("(std::istream & , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("网络的字符串输入")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::ostream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#friend-operator<"}},[t._v("operator<")])],1),t._v("(std::ostream & , const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("网络的二进制输出")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::istream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#friend-operator>"}},[t._v("operator>")])],1),t._v("(std::istream & , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("网络的二进制输出")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal2, EdgeVal2, NodeKey1, EdgeKey1, Trait1 >")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html#friend-fmap"}},[t._v("fmap")])],1),t._v("(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & n, std::function< NodeVal2(const NodeVal1 &)> f1, std::function< EdgeVal2(const EdgeVal1 &)> f2) "),a("br"),t._v("利用格点上的信息的函数和边上信息的函数从一个网络得到另一个网络")],1)])])]),t._v(" "),a("h2",{attrs:{id:"detailed-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#detailed-description"}},[t._v("#")]),t._v(" Detailed Description")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeVal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EdgeVal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeKey")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EdgeKey")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("stdEdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default_traits"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("EdgeKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("net")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("network")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("网络是一些点和点间关联的并")]),t._v(" "),a("p",[a("strong",[t._v("Template Parameters")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("NodeVal")]),t._v(" 每个格点中附着的信息类型")]),t._v(" "),a("li",[a("strong",[t._v("EdgeVal")]),t._v(" 每个边上附着的信息类型")]),t._v(" "),a("li",[a("strong",[t._v("NodeKey")]),t._v(" 格点名字的类型")]),t._v(" "),a("li",[a("strong",[t._v("EdgeKey")]),t._v(" 边的名字的类型")]),t._v(" "),a("li",[a("strong",[t._v("Trait")]),t._v(" 以上类型的特征，包括输入输出和比较")])]),t._v(" "),a("p",[a("strong",[t._v("See")]),t._v(": "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v(", "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1edge.html"}},[t._v("edge")])],1),t._v(" "),a("p",[t._v("每个格点拥有一个名字，整个网络也有自己的名字，网络可以通过格点名称寻找格点")]),t._v(" "),a("h2",{attrs:{id:"public-types-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-types-documentation"}},[t._v("#")]),t._v(" Public Types Documentation")]),t._v(" "),a("h3",{attrs:{id:"using-iternode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-iternode"}},[t._v("#")]),t._v(" using IterNode")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("std")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Trait"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"public-functions-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-functions-documentation"}},[t._v("#")]),t._v(" Public Functions Documentation")]),t._v(" "),a("h3",{attrs:{id:"function-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-network"}},[t._v("#")]),t._v(" function network")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-network-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-network-2"}},[t._v("#")]),t._v(" function network")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-network-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-network-3"}},[t._v("#")]),t._v(" function network")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" N\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-operator"}},[t._v("#")]),t._v(" function operator=")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" N\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-network-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-network-4"}},[t._v("#")]),t._v(" function network")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-operator-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-operator-2"}},[t._v("#")]),t._v(" function operator=")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-fope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-fope"}},[t._v("#")]),t._v(" function fope")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对每个格点上的信息做变换")]),t._v(" "),a("h3",{attrs:{id:"function-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-add"}},[t._v("#")]),t._v(" function add")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("加一个格点")]),t._v(" "),a("h3",{attrs:{id:"function-set-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-set-edge"}},[t._v("#")]),t._v(" function set_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("加一条边")]),t._v(" "),a("h3",{attrs:{id:"function-set-edge-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-set-edge-2"}},[t._v("#")]),t._v(" function set_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-set-edge-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-set-edge-3"}},[t._v("#")]),t._v(" function set_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("加一条边。根据格点名字和Trait::bind自动生成边的名字")]),t._v(" "),a("h3",{attrs:{id:"function-set-edge-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-set-edge-4"}},[t._v("#")]),t._v(" function set_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    IterNode \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-del"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del"}},[t._v("#")]),t._v(" function del")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("删除一个格点")]),t._v(" "),a("h3",{attrs:{id:"function-del-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del-2"}},[t._v("#")]),t._v(" function del")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-del-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del-edge"}},[t._v("#")]),t._v(" function del_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("删除两个格点之间的边")]),t._v(" "),a("h3",{attrs:{id:"function-del-edge-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del-edge-2"}},[t._v("#")]),t._v(" function del_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    IterNode \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-del-leg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del-leg"}},[t._v("#")]),t._v(" function del_leg")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del_leg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("删除一个腿连着的边")]),t._v(" "),a("h3",{attrs:{id:"function-del-leg-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-del-leg-2"}},[t._v("#")]),t._v(" function del_leg")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del_leg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-rename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-rename"}},[t._v("#")]),t._v(" function rename")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" old_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" new_key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("重命名一个格点")]),t._v(" "),a("h3",{attrs:{id:"function-rename-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-rename-2"}},[t._v("#")]),t._v(" function rename")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-absorb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-absorb"}},[t._v("#")]),t._v(" function absorb")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("absorb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" contract_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("将另一个格点缩入一个格点")]),t._v(" "),a("h3",{attrs:{id:"function-absorb-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-absorb-2"}},[t._v("#")]),t._v(" function absorb")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("absorb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-split"}},[t._v("#")]),t._v(" function split")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edgekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" inds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dec_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edgekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dec_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("将另一个格点分解为两个格点")]),t._v(" "),a("h3",{attrs:{id:"function-split-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-split-2"}},[t._v("#")]),t._v(" function split")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edgekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" inds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dec_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edgekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dec_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("将另一个格点分解为两个格点")]),t._v(" "),a("h3",{attrs:{id:"function-gviz"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-gviz"}},[t._v("#")]),t._v(" function gviz")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gviz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" contains"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" label_bond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("将网络转化为graphviz格式的字符串")]),t._v(" "),a("h3",{attrs:{id:"function-exist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-exist"}},[t._v("#")]),t._v(" function exist")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("判断网络是否包含一个格点")]),t._v(" "),a("h3",{attrs:{id:"function-operator-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-operator-3"}},[t._v("#")]),t._v(" function operator[]")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("返回网络的一个格点的信息")]),t._v(" "),a("h3",{attrs:{id:"function-set-val"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-set-val"}},[t._v("#")]),t._v(" function set_val")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("设置网络的一个格点的信息")]),t._v(" "),a("h3",{attrs:{id:"function-init-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-init-nodes"}},[t._v("#")]),t._v(" function init_nodes")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init_nodes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    init_node_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" init_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("初始化网络的格点的信息")]),t._v(" "),a("h3",{attrs:{id:"function-init-edges"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-init-edges"}},[t._v("#")]),t._v(" function init_edges")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init_edges")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    init_edge_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" init_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("初始化网络的边的信息")]),t._v(" "),a("h3",{attrs:{id:"function-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-contract"}},[t._v("#")]),t._v(" function contract")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("NodeVal "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" contract_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("缩并整个网络")]),t._v(" "),a("h3",{attrs:{id:"function-tn-contract1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-tn-contract1"}},[t._v("#")]),t._v(" function tn_contract1")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tn_contract1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodekey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" contract_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("缩并的辅助函数")]),t._v(" "),a("h3",{attrs:{id:"function-tn-contract1-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-tn-contract1-2"}},[t._v("#")]),t._v(" function tn_contract1")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tn_contract1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    IterNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-tn-contract2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-tn-contract2"}},[t._v("#")]),t._v(" function tn_contract2")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("NodeVal "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tn_contract2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" group1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ten1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" group2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ten2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    absorb_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    contract_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" contract_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("缩并的辅助函数")]),t._v(" "),a("h2",{attrs:{id:"friends-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friends-2"}},[t._v("#")]),t._v(" Friends")]),t._v(" "),a("h3",{attrs:{id:"friend-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-operator"}},[t._v("#")]),t._v(" friend operator<<")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("网络的字符串输出")]),t._v(" "),a("h3",{attrs:{id:"friend-operator-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-operator-2"}},[t._v("#")]),t._v(" friend operator>>")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("网络的字符串输入")]),t._v(" "),a("h3",{attrs:{id:"friend-operator-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-operator-3"}},[t._v("#")]),t._v(" friend operator<")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("网络的二进制输出")]),t._v(" "),a("h3",{attrs:{id:"friend-operator-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-operator-4"}},[t._v("#")]),t._v(" friend operator>")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("网络的二进制输出")]),t._v(" "),a("h3",{attrs:{id:"friend-fmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-fmap"}},[t._v("#")]),t._v(" friend fmap")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeVal2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeVal2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("利用格点上的信息的函数和边上信息的函数从一个网络得到另一个网络")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Updated on 26 November 2020 at 00:22:08 CST")])])}),[],!1,null,null,null);s.default=n.exports}}]);